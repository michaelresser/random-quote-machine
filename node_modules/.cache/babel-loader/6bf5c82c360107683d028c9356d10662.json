{"ast":null,"code":"import _classCallCheck from \"/Users/michaelesser/Desktop/randomQuoteMachine/random-quote-machine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelesser/Desktop/randomQuoteMachine/random-quote-machine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelesser/Desktop/randomQuoteMachine/random-quote-machine/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelesser/Desktop/randomQuoteMachine/random-quote-machine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelesser/Desktop/randomQuoteMachine/random-quote-machine/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/michaelesser/Desktop/randomQuoteMachine/random-quote-machine/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/michaelesser/Desktop/randomQuoteMachine/random-quote-machine/src/App.js\";\nimport React, { Component } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nlibrary.add(faQuoteLeft);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.getInitialQuote = function () {\n      console.table(_this.state.quotes[0]);\n      _this.setState = {\n        currentQuote: _this.state.quotes[0]\n      };\n      console.table(_this.state.currentQuote);\n    };\n\n    _this.getNewQuote = function () {\n      var random = Math.floor(Math.random * _this.state.quotes.length);\n      console.table(_this.state.quotes[random]);\n      _this.setState = {\n        currentQuote: _this.state.quotes[random]\n      };\n      console.table(_this.state.currentQuote);\n    };\n\n    _this.state = {\n      quotes: [{\n        quote: 'Be water, my friend',\n        author: 'Bruce Lee'\n      }, {\n        quote: 'Do, or Do Not. There is no Try.',\n        author: 'Master Yoda'\n      }, {\n        quote: 'Be excellent to each other',\n        author: 'Bill & Ted'\n      }],\n      currentQuote: {}\n    };\n    _this.getNewQuote = _this.getNewQuote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getInitialQuote = _this.getInitialQuote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getInitialQuote();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"body\", {\n        id: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"quote-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"quote-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"quote-left\",\n        className: \"fa-3x\",\n        id: \"quote-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"text\",\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Quote will go here: \", this.state.currentQuote.quote)), React.createElement(\"div\", {\n        id: \"author\",\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" - \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Author: \", this.state.currentQuote.author)), React.createElement(\"div\", {\n        id: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"tweet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"new-quote\",\n        onClick: this.getNewQuote(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Get New Quote\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"by mike\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/michaelesser/Desktop/randomQuoteMachine/random-quote-machine/src/App.js"],"names":["React","Component","library","FontAwesomeIcon","faQuoteLeft","add","App","props","getInitialQuote","console","table","state","quotes","setState","currentQuote","getNewQuote","random","Math","floor","length","quote","author","bind"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,OAAO,WAAP;AAEAF,OAAO,CAACG,GAAR,CAAYD,WAAZ;;IAEME,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAcnBC,eAdmB,GAcD,YAAM;AACtBC,MAAAA,OAAO,CAACC,KAAR,CAAc,MAAKC,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAAd;AACA,YAAKC,QAAL,GAAiB;AACfC,QAAAA,YAAY,EAAE,MAAKH,KAAL,CAAWC,MAAX,CAAkB,CAAlB;AADC,OAAjB;AAGAH,MAAAA,OAAO,CAACC,KAAR,CAAc,MAAKC,KAAL,CAAWG,YAAzB;AACD,KApBkB;;AAAA,UA0BnBC,WA1BmB,GA0BL,YAAM;AAClB,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,GAAc,MAAKL,KAAL,CAAWC,MAAX,CAAkBO,MAA3C,CAAf;AACAV,MAAAA,OAAO,CAACC,KAAR,CAAc,MAAKC,KAAL,CAAWC,MAAX,CAAkBI,MAAlB,CAAd;AACA,YAAKH,QAAL,GAAiB;AACfC,QAAAA,YAAY,EAAE,MAAKH,KAAL,CAAWC,MAAX,CAAkBI,MAAlB;AADC,OAAjB;AAIAP,MAAAA,OAAO,CAACC,KAAR,CAAc,MAAKC,KAAL,CAAWG,YAAzB;AAED,KAnCkB;;AAEjB,UAAKH,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,CACN;AAAEQ,QAAAA,KAAK,EAAE,qBAAT;AAAgCC,QAAAA,MAAM,EAAE;AAAxC,OADM,EAEN;AAAED,QAAAA,KAAK,EAAE,iCAAT;AAA4CC,QAAAA,MAAM,EAAE;AAApD,OAFM,EAGN;AAAED,QAAAA,KAAK,EAAE,4BAAT;AAAuCC,QAAAA,MAAM,EAAE;AAA/C,OAHM,CADG;AAMXP,MAAAA,YAAY,EAAE;AANH,KAAb;AAQA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBO,IAAjB,uDAAnB;AACA,UAAKd,eAAL,GAAuB,MAAKA,eAAL,CAAqBc,IAArB,uDAAvB;AAXiB;AAYlB;;;;wCAUmB;AAClB,WAAKd,eAAL;AACD;;;6BAeQ;AACP,aACE;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,YAAtB;AAAmC,QAAA,SAAS,EAAC,OAA7C;AAAqD,QAAA,EAAE,EAAC,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,QAAA,EAAE,EAAC,MAAT;AAAgB,QAAA,SAAS,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAsD,KAAKG,KAAL,CAAWG,YAAX,CAAwBM,KAA9E,CAFF,CADF,EAKE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAiB,QAAA,SAAS,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,KAAKT,KAAL,CAAWG,YAAX,CAAwBO,MAAtC,CAFF,CALF,EASE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,OAAO,EAAE,KAAKN,WAAL,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CATF,CADF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAfF,CADF;AAmBD;;;;EA5Ded,S;;AA+DlB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\n\nlibrary.add(faQuoteLeft)\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [\n        { quote: 'Be water, my friend', author: 'Bruce Lee' },\n        { quote: 'Do, or Do Not. There is no Try.', author: 'Master Yoda' },\n        { quote: 'Be excellent to each other', author: 'Bill & Ted' },\n      ],\n      currentQuote: {},\n    }\n    this.getNewQuote = this.getNewQuote.bind(this);\n    this.getInitialQuote = this.getInitialQuote.bind(this);\n  }\n\n  getInitialQuote = () => {\n    console.table(this.state.quotes[0]);\n    this.setState = ({\n      currentQuote: this.state.quotes[0]\n    })\n    console.table(this.state.currentQuote);\n  }\n\n  componentDidMount() {\n    this.getInitialQuote();\n  }\n\n  getNewQuote = () => {\n    const random = Math.floor(Math.random * this.state.quotes.length);\n    console.table(this.state.quotes[random]);\n    this.setState = ({\n      currentQuote: this.state.quotes[random]\n\n    })\n    console.table(this.state.currentQuote);\n\n  }\n\n\n\n  render() {\n    return (\n      <body id='wrapper'>\n        <div id='quote-box'>\n          <div id='quote-text'>\n            <FontAwesomeIcon icon='quote-left' className='fa-3x' id='quote-icon' />\n            <span id='text' className='text'>Quote will go here: {this.state.currentQuote.quote}</span>\n          </div>\n          <div id='author' className='text'>\n            <div> - </div>\n            <div>Author: {this.state.currentQuote.author}</div>\n          </div>\n          <div id='buttons'>\n            <button id='tweet'></button>\n            <button id='new-quote' onClick={this.getNewQuote()}>Get New Quote</button>\n          </div>\n        </div>\n        <div>by mike</div>\n      </body>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}