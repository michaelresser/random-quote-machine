{"ast":null,"code":"import _classCallCheck from \"/Users/michaelesser/Desktop/randomQuoteMachine/random-quote-machine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelesser/Desktop/randomQuoteMachine/random-quote-machine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelesser/Desktop/randomQuoteMachine/random-quote-machine/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelesser/Desktop/randomQuoteMachine/random-quote-machine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelesser/Desktop/randomQuoteMachine/random-quote-machine/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/michaelesser/Desktop/randomQuoteMachine/random-quote-machine/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/michaelesser/Desktop/randomQuoteMachine/random-quote-machine/src/App.js\";\nimport React, { Component } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nlibrary.add(faQuoteLeft);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.getInitialQuote = function () {\n      _this.setState = {\n        currentQuote: _this.state.quotes[0]\n      };\n    };\n\n    _this.getNewQuote = function () {\n      var random = Math.floor(Math.random * _this.state.quotes.length);\n      _this.setState = {\n        currentQuote: _this.state.quotes[random]\n      };\n    };\n\n    _this.state = {\n      quotes: [{\n        quote: 'Be water, my friend',\n        author: 'Bruce Lee'\n      }, {\n        quote: 'Do, or Do Not. There is no Try.',\n        author: 'Master Yoda'\n      }, {\n        quote: 'Excellence. therefore, is a habit.',\n        author: 'Aristotle (attr.)'\n      }],\n      currentQuote: {}\n    };\n    _this.getNewQuote = _this.getNewQuote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getInitialQuote = _this.getInitialQuote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getInitialQuote();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"body\", {\n        id: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"quote-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"quote-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"quote-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.state.currentQuote.quote)), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"-\"), React.createElement(\"span\", {\n        id: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.state.currentQuote.author), React.createElement(\"div\", {\n        id: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"tweet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"new-quote\",\n        onClick: this.getNewQuote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Get New Quote\"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/michaelesser/Desktop/randomQuoteMachine/random-quote-machine/src/App.js"],"names":["React","Component","library","FontAwesomeIcon","faQuoteLeft","add","App","props","getInitialQuote","setState","currentQuote","state","quotes","getNewQuote","random","Math","floor","length","quote","author","bind"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,OAAO,WAAP;AAEAF,OAAO,CAACG,GAAR,CAAYD,WAAZ;;IAEME,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAcnBC,eAdmB,GAcD,YAAM;AACtB,YAAKC,QAAL,GAAiB;AACfC,QAAAA,YAAY,EAAE,MAAKC,KAAL,CAAWC,MAAX,CAAkB,CAAlB;AADC,OAAjB;AAGD,KAlBkB;;AAAA,UAoBnBC,WApBmB,GAoBL,YAAM;AAClB,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,GAAc,MAAKH,KAAL,CAAWC,MAAX,CAAkBK,MAA3C,CAAf;AACA,YAAKR,QAAL,GAAiB;AACfC,QAAAA,YAAY,EAAE,MAAKC,KAAL,CAAWC,MAAX,CAAkBE,MAAlB;AADC,OAAjB;AAGD,KAzBkB;;AAEjB,UAAKH,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,CACN;AAAEM,QAAAA,KAAK,EAAE,qBAAT;AAAgCC,QAAAA,MAAM,EAAE;AAAxC,OADM,EAEN;AAAED,QAAAA,KAAK,EAAE,iCAAT;AAA4CC,QAAAA,MAAM,EAAE;AAApD,OAFM,EAGN;AAAED,QAAAA,KAAK,EAAE,oCAAT;AAA+CC,QAAAA,MAAM,EAAE;AAAvD,OAHM,CADG;AAMXT,MAAAA,YAAY,EAAE;AANH,KAAb;AAQA,UAAKG,WAAL,GAAmB,MAAKA,WAAL,CAAiBO,IAAjB,uDAAnB;AACA,UAAKZ,eAAL,GAAuB,MAAKA,eAAL,CAAqBY,IAArB,uDAAvB;AAXiB;AAYlB;;;;wCAemB;AAClB,WAAKZ,eAAL;AACD;;;6BAEQ;AACP,aACE;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiB,KAAKG,KAAL,CAAWD,YAAX,CAAwBQ,KAAzC,CAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,EAME;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmB,KAAKP,KAAL,CAAWD,YAAX,CAAwBS,MAA3C,CANF,EAOE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,OAAO,EAAE,KAAKN,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CAPF,CADF,CADF;AAgBD;;;;EAjDeZ,S;;AAoDlB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\n\nlibrary.add(faQuoteLeft)\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [\n        { quote: 'Be water, my friend', author: 'Bruce Lee' },\n        { quote: 'Do, or Do Not. There is no Try.', author: 'Master Yoda' },\n        { quote: 'Excellence. therefore, is a habit.', author: 'Aristotle (attr.)' },\n      ],\n      currentQuote: {},\n    }\n    this.getNewQuote = this.getNewQuote.bind(this);\n    this.getInitialQuote = this.getInitialQuote.bind(this);\n  }\n\n  getInitialQuote = () => {\n    this.setState = ({\n      currentQuote: this.state.quotes[0]\n    })\n  }\n\n  getNewQuote = () => {\n    const random = Math.floor(Math.random * this.state.quotes.length);\n    this.setState = ({\n      currentQuote: this.state.quotes[random]\n    })\n  }\n  \n  componentDidMount() {\n    this.getInitialQuote();\n  }\n  \n  render() {\n    return (\n      <body id='wrapper'>\n        <div id='quote-box'>\n          <div id='quote-text'>\n            <FontAwesomeIcon icon='quote-left' />\n            <span id='text'>{this.state.currentQuote.quote}</span>\n          </div>\n          <span>-</span>\n          <span id='author'>{this.state.currentQuote.author}</span>\n          <div id='buttons'>\n            <button id='tweet'></button>\n            <button id='new-quote' onClick={this.getNewQuote}>Get New Quote</button>\n          </div>\n        </div>\n      </body>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}